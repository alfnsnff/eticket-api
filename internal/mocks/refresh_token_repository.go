// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/refresh_token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	domain "eticket-api/internal/domain"
	gotann "eticket-api/pkg/gotann"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockRefreshTokenRepository is a mock of RefreshTokenRepository interface.
type MockRefreshTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRefreshTokenRepositoryMockRecorder
}

// MockRefreshTokenRepositoryMockRecorder is the mock recorder for MockRefreshTokenRepository.
type MockRefreshTokenRepositoryMockRecorder struct {
	mock *MockRefreshTokenRepository
}

// NewMockRefreshTokenRepository creates a new mock instance.
func NewMockRefreshTokenRepository(ctrl *gomock.Controller) *MockRefreshTokenRepository {
	mock := &MockRefreshTokenRepository{ctrl: ctrl}
	mock.recorder = &MockRefreshTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefreshTokenRepository) EXPECT() *MockRefreshTokenRepositoryMockRecorder {
	return m.recorder
}

// CountRefreshToken mocks base method.
func (m *MockRefreshTokenRepository) CountRefreshToken(ctx context.Context, conn gotann.Connection) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountRefreshToken", ctx, conn)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountRefreshToken indicates an expected call of CountRefreshToken.
func (mr *MockRefreshTokenRepositoryMockRecorder) CountRefreshToken(ctx, conn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountRefreshToken", reflect.TypeOf((*MockRefreshTokenRepository)(nil).CountRefreshToken), ctx, conn)
}

// DeleteRefreshToken mocks base method.
func (m *MockRefreshTokenRepository) DeleteRefreshToken(ctx context.Context, conn gotann.Connection, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRefreshToken", ctx, conn, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRefreshToken indicates an expected call of DeleteRefreshToken.
func (mr *MockRefreshTokenRepositoryMockRecorder) DeleteRefreshToken(ctx, conn, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRefreshToken", reflect.TypeOf((*MockRefreshTokenRepository)(nil).DeleteRefreshToken), ctx, conn, id)
}

// FindAllRefreshToken mocks base method.
func (m *MockRefreshTokenRepository) FindAllRefreshToken(ctx context.Context, conn gotann.Connection, limit, offset int, sort, search string) ([]*domain.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllRefreshToken", ctx, conn, limit, offset, sort, search)
	ret0, _ := ret[0].([]*domain.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllRefreshToken indicates an expected call of FindAllRefreshToken.
func (mr *MockRefreshTokenRepositoryMockRecorder) FindAllRefreshToken(ctx, conn, limit, offset, sort, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllRefreshToken", reflect.TypeOf((*MockRefreshTokenRepository)(nil).FindAllRefreshToken), ctx, conn, limit, offset, sort, search)
}

// FindRefreshTokenByID mocks base method.
func (m *MockRefreshTokenRepository) FindRefreshTokenByID(ctx context.Context, conn gotann.Connection, id string) (*domain.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindRefreshTokenByID", ctx, conn, id)
	ret0, _ := ret[0].(*domain.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindRefreshTokenByID indicates an expected call of FindRefreshTokenByID.
func (mr *MockRefreshTokenRepositoryMockRecorder) FindRefreshTokenByID(ctx, conn, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindRefreshTokenByID", reflect.TypeOf((*MockRefreshTokenRepository)(nil).FindRefreshTokenByID), ctx, conn, id)
}

// FindRefreshTokenByIDAndStatus mocks base method.
func (m *MockRefreshTokenRepository) FindRefreshTokenByIDAndStatus(ctx context.Context, conn gotann.Connection, id string, status bool) (*domain.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindRefreshTokenByIDAndStatus", ctx, conn, id, status)
	ret0, _ := ret[0].(*domain.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindRefreshTokenByIDAndStatus indicates an expected call of FindRefreshTokenByIDAndStatus.
func (mr *MockRefreshTokenRepositoryMockRecorder) FindRefreshTokenByIDAndStatus(ctx, conn, id, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindRefreshTokenByIDAndStatus", reflect.TypeOf((*MockRefreshTokenRepository)(nil).FindRefreshTokenByIDAndStatus), ctx, conn, id, status)
}

// InsertRefreshToken mocks base method.
func (m *MockRefreshTokenRepository) InsertRefreshToken(ctx context.Context, conn gotann.Connection, refreshToken *domain.RefreshToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertRefreshToken", ctx, conn, refreshToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertRefreshToken indicates an expected call of InsertRefreshToken.
func (mr *MockRefreshTokenRepositoryMockRecorder) InsertRefreshToken(ctx, conn, refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertRefreshToken", reflect.TypeOf((*MockRefreshTokenRepository)(nil).InsertRefreshToken), ctx, conn, refreshToken)
}

// InsertRefreshTokenBulk mocks base method.
func (m *MockRefreshTokenRepository) InsertRefreshTokenBulk(ctx context.Context, conn gotann.Connection, refreshTokens []*domain.RefreshToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertRefreshTokenBulk", ctx, conn, refreshTokens)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertRefreshTokenBulk indicates an expected call of InsertRefreshTokenBulk.
func (mr *MockRefreshTokenRepositoryMockRecorder) InsertRefreshTokenBulk(ctx, conn, refreshTokens interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertRefreshTokenBulk", reflect.TypeOf((*MockRefreshTokenRepository)(nil).InsertRefreshTokenBulk), ctx, conn, refreshTokens)
}

// RevokeRefreshTokenByID mocks base method.
func (m *MockRefreshTokenRepository) RevokeRefreshTokenByID(ctx context.Context, conn gotann.Connection, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeRefreshTokenByID", ctx, conn, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeRefreshTokenByID indicates an expected call of RevokeRefreshTokenByID.
func (mr *MockRefreshTokenRepositoryMockRecorder) RevokeRefreshTokenByID(ctx, conn, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeRefreshTokenByID", reflect.TypeOf((*MockRefreshTokenRepository)(nil).RevokeRefreshTokenByID), ctx, conn, id)
}

// UpdateRefreshToken mocks base method.
func (m *MockRefreshTokenRepository) UpdateRefreshToken(ctx context.Context, conn gotann.Connection, refreshToken *domain.RefreshToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRefreshToken", ctx, conn, refreshToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRefreshToken indicates an expected call of UpdateRefreshToken.
func (mr *MockRefreshTokenRepositoryMockRecorder) UpdateRefreshToken(ctx, conn, refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRefreshToken", reflect.TypeOf((*MockRefreshTokenRepository)(nil).UpdateRefreshToken), ctx, conn, refreshToken)
}

// UpdateRefreshTokenBulk mocks base method.
func (m *MockRefreshTokenRepository) UpdateRefreshTokenBulk(ctx context.Context, conn gotann.Connection, refreshTokens []*domain.RefreshToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRefreshTokenBulk", ctx, conn, refreshTokens)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRefreshTokenBulk indicates an expected call of UpdateRefreshTokenBulk.
func (mr *MockRefreshTokenRepositoryMockRecorder) UpdateRefreshTokenBulk(ctx, conn, refreshTokens interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRefreshTokenBulk", reflect.TypeOf((*MockRefreshTokenRepository)(nil).UpdateRefreshTokenBulk), ctx, conn, refreshTokens)
}
