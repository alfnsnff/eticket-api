// Code generated by MockGen. DO NOT EDIT.
// Source: internal/common/token/token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	token "eticket-api/internal/common/token"
	domain "eticket-api/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenUtil is a mock of TokenUtil interface.
type MockTokenUtil struct {
	ctrl     *gomock.Controller
	recorder *MockTokenUtilMockRecorder
}

// MockTokenUtilMockRecorder is the mock recorder for MockTokenUtil.
type MockTokenUtilMockRecorder struct {
	mock *MockTokenUtil
}

// NewMockTokenUtil creates a new mock instance.
func NewMockTokenUtil(ctrl *gomock.Controller) *MockTokenUtil {
	mock := &MockTokenUtil{ctrl: ctrl}
	mock.recorder = &MockTokenUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenUtil) EXPECT() *MockTokenUtilMockRecorder {
	return m.recorder
}

// GenerateAccessToken mocks base method.
func (m *MockTokenUtil) GenerateAccessToken(user *domain.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAccessToken", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateAccessToken indicates an expected call of GenerateAccessToken.
func (mr *MockTokenUtilMockRecorder) GenerateAccessToken(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAccessToken", reflect.TypeOf((*MockTokenUtil)(nil).GenerateAccessToken), user)
}

// GenerateRefreshToken mocks base method.
func (m *MockTokenUtil) GenerateRefreshToken(user *domain.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRefreshToken", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRefreshToken indicates an expected call of GenerateRefreshToken.
func (mr *MockTokenUtilMockRecorder) GenerateRefreshToken(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRefreshToken", reflect.TypeOf((*MockTokenUtil)(nil).GenerateRefreshToken), user)
}

// ValidateToken mocks base method.
func (m *MockTokenUtil) ValidateToken(tokenString string) (*token.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", tokenString)
	ret0, _ := ret[0].(*token.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockTokenUtilMockRecorder) ValidateToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockTokenUtil)(nil).ValidateToken), token)
}
