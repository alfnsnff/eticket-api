// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/payment.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "eticket-api/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTripayClient is a mock of TripayClient interface.
type MockTripayClient struct {
	ctrl     *gomock.Controller
	recorder *MockTripayClientMockRecorder
}

// MockTripayClientMockRecorder is the mock recorder for MockTripayClient.
type MockTripayClientMockRecorder struct {
	mock *MockTripayClient
}

// NewMockTripayClient creates a new mock instance.
func NewMockTripayClient(ctrl *gomock.Controller) *MockTripayClient {
	mock := &MockTripayClient{ctrl: ctrl}
	mock.recorder = &MockTripayClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTripayClient) EXPECT() *MockTripayClientMockRecorder {
	return m.recorder
}

// CreatePayment mocks base method.
func (m *MockTripayClient) CreatePayment(payload *model.WriteTransactionRequest) (model.ReadTransactionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePayment", payload)
	ret0, _ := ret[0].(model.ReadTransactionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePayment indicates an expected call of CreatePayment.
func (mr *MockTripayClientMockRecorder) CreatePayment(payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePayment", reflect.TypeOf((*MockTripayClient)(nil).CreatePayment), payload)
}

// GetPaymentChannels mocks base method.
func (m *MockTripayClient) GetPaymentChannels() ([]model.ReadPaymentChannelResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentChannels")
	ret0, _ := ret[0].([]model.ReadPaymentChannelResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentChannels indicates an expected call of GetPaymentChannels.
func (mr *MockTripayClientMockRecorder) GetPaymentChannels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentChannels", reflect.TypeOf((*MockTripayClient)(nil).GetPaymentChannels))
}

// GetTransactionDetail mocks base method.
func (m *MockTripayClient) GetTransactionDetail(reference string) (*model.ReadTransactionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionDetail", reference)
	ret0, _ := ret[0].(*model.ReadTransactionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionDetail indicates an expected call of GetTransactionDetail.
func (mr *MockTripayClientMockRecorder) GetTransactionDetail(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionDetail", reflect.TypeOf((*MockTripayClient)(nil).GetTransactionDetail), reference)
}
