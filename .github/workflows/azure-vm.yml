- name: Deploy to Azure VM via SSH
  uses: appleboy/ssh-action@v1.0.3
  with:
    host: ${{ secrets.VM_HOST }}
    username: ${{ secrets.VM_USER }}
    key: ${{ secrets.VM_SSH_KEY }}
    script: |
      # Create .env file dynamically
      cat <<EOF > .env
      SECRET_KEY=${{ secrets.SECRET_KEY }}
      PORT=${{ secrets.PORT }}
      ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}
      REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}
      TRIPAY_API_KEY=${{ secrets.TRIPAY_API_KEY }}
      TRIPAY_PRIVATE_API_KEY=${{ secrets.TRIPAY_PRIVATE_API_KEY }}
      TRIPAY_MERCHANT_CODE=${{ secrets.TRIPAY_MERCHANT_CODE }}
      DATABASE_HOST=${{ secrets.DATABASE_HOST }}
      DATABASE_PORT=${{ secrets.DATABASE_PORT }}
      DATABASE_NAME=${{ secrets.DATABASE_NAME }}
      DATABASE_USER=${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
      DATABASE_SSLMODE=${{ secrets.DATABASE_SSLMODE }}
      MAILER_HOST=${{ secrets.MAILER_HOST }}
      MAILER_PORT=${{ secrets.MAILER_PORT }}
      MAILER_USERNAME=${{ secrets.MAILER_USERNAME }}
      MAILER_PASSWORD=${{ secrets.MAILER_PASSWORD }}
      MAILER_FROM=${{ secrets.MAILER_FROM }}
      EOF

      # Login and pull image
      echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/myapp:${{ github.sha }}

      # Stop and remove existing container
      docker stop myapp || true
      docker rm myapp || true

      # Run container with .env
      docker run -d \
        --name myapp \
        --restart unless-stopped \
        --env-file .env \
        -p 80:80 \
        ghcr.io/${{ secrets.GHCR_USERNAME }}/myapp:${{ github.sha }}

      # (Optional) Clean up .env file
      rm .env
